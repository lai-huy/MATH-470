from numpy import gcd


def legendre(a, p):
    return pow(a, (p - 1) >> 1, p)


def tonelli(n, p):
    assert legendre(n, p) == 1, "not a square (mod p)"
    q = p - 1
    s = 0
    while not (q & 1):
        q >>= 1
        s += 1
    if s == 1:
        return pow(n, (p + 1) >> 2, p)
    for z in range(2, p):
        if p - 1 == legendre(z, p):
            break
    c = pow(z, q, p)
    r = pow(n, (q + 1) >> 1, p)
    t = pow(n, q, p)
    m = s
    t2 = 0
    while (t - 1) % p:
        t2 = (t * t) % p
        for i in range(1, m):
            if not ((t2 - 1) % p):
                break
            t2 = (t2 * t2) % p
        b = pow(c, 1 << (m - i - 1), p)
        r = (r * b) % p
        c = (b * b) % p
        t = (t * c) % p
        m = i
    return r


def main():
    N20 = 35437391370189380023
    # 3680798371 * 9627637213

    N30 = 403903264686388453744794079313
    # 525825865925917 * 768131221493189

    N40 = 6754910601769419708731690214821789355427
    # 79599963126718408889 * 84860725262095958843

    N50 = 60529141009038413034423166889017301527837910258131
    # 6629969174350950380233123 * 9129626310059577844052497

    N60 = 133523995803370205942225812853710227025177081936429644652483
    # 192985676104654302319629235559 * 691885524866422775606827175237

    N70 = 3426473875287793756703750981622962137419589116424756456135570641437827

    e = 65537
    c = 2400556132229818489305649515346654848298483477334619666591280284126769


if __name__ == "__main__":
    main()
